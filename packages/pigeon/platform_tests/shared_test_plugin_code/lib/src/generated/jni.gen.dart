// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Autogenerated from Pigeon, do not edit directly.
// See also: https://pub.dev/packages/pigeon

// ignore_for_file: public_member_api_docs

import 'package:jni/jni.dart';

import '../jnigen_api.dart';

const String defaultInstanceName =
    'PigeonDefaultClassName32uh4ui3lh445uh4h3l2l455g4y34u';

class JniMessageApi {
  late JniMessageApiRegistrar _api;

  static JniMessageApi? getInstance({
    String name = defaultInstanceName,
  }) {
    final JniMessageApiRegistrar? link =
        JniMessageApiRegistrar().getInstance(JString.fromString(name));
    if (link == null) {
      String nameString = 'named $name';
      if (name == defaultInstanceName) {
        nameString = 'with no name';
      }
      final String error = 'No instance $nameString has been registered.';
      throw ArgumentError(error);
    }
    link.getApi();
    final JniMessageApi res = JniMessageApi();
    res._api = link;
    return res;
  }

  String search(String request) {
    final JString res = _api.search(JString.fromString(request));
    final String stringRes = res.toString();
    res.release();
    return stringRes;
  }

  Future<String> thinkBeforeAnswering() async {
    final JString res = await _api.thinkBeforeAnswering();
    final String stringRes = res.toString();
    res.release();
    return stringRes;
  }
}
